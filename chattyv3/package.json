{
  "name": "chatty",
  "version": "1.0.0",
  "description": "",
  "main": "server.js",
  "scripts": {
    "cors": "curl -H \"Origin: http://localhost:$1\" --head http://localhost:$2/$3",
    "demo-v": "xargs -a live.txt -i nohup >/dev/null google-chrome --new-tab {}",
    "test-u": "xargs -a __urls__.txt -i nohup >/dev/null google-chrome --new-tab http://127.0.0.1:$1/msg/{}",
    "start": "node .",
    "start-param" : "ts-node $1",
    "start-t": "ts-node ./src/index.ts",
    "start-comp": "node ./dist/index.js",
    "no-config": "tsc [src,constants,resolvers,models,routers,controllers]*.ts",
    "live-c": "tsc src/*.ts -w",
    "live-t": "nodemon --exec ts-node ./src/index.ts",
    "live-p": "nodemon ./dist/index.js",
    "live-f": "python3 -m http.server  & xdg-open http://127.0.0.1:$1",
    "live-fd": "python3 -m http.server  & xdg-open http://127.0.0.1:$1 & ls | grep html | xargs xdg-open",
    "test-a": "xargs chromium-browser < http://127.0.0.1:$1/",
    "test-s": "bash test/__test__.sh",
    "test-devices": "python3 test/emulate.py",
    "test-browsers": "export LH='http://127.0.0.1:$1/'; google-chrome --new-tab $LH & firefox -nt $LH & opera --with-feature:system-theme $LH & microsoft-edge-dev --app $LH & chromium --app $LH & google-chrome --incognite $LH",
    "db-mo": "sudo systemctl start mongod && mongosh",
    "db-mo-del": "mongo use $1 --eval db.$2.remove({})",
    "db-mo-in": "mongosh use $1",
    "db-pg": "sudo -u postgres psql -U  -h 127.0.0.1:$1 ",
    "db-pg-in": "sudo -u postgres createuser --interactive -P ; sudo -u postgres createdb -O  ",
    "sql": "google-chrome --new-tab http://127.0.0.1:$1/graphql",
    "sql-m": "mikro-orm migration:create",
    "port-scan": "lsof -i :$1",
    "scan": "top | grep $3",
    "kill": "kill -9",
    "m": "grep dependencies package.json -A 500 | tail -l",
    "m-v": "cat package-lock.json | grep $1 -B 20 -A 20 | cb",
    "glance": "find . -type f | xargs head -30 | more",
    "f": "find . -type $1 | xargs head -30 | more",
    "fr": "ls -R | grep $1 -B 0",
    "prodvar": "touch src/constants.ts && echo 'export const __prod__ = process.env.NODE_ENV === \"production\"' > src/constants.ts && echo 'import { __prod__ } from \"./constants\";' | clipboard",
    "prod-env": "export NODE_ENV='production'",
    "prod-persist": "export NODE_ENV='production'; sudo systemctl start mongod; npm prune --production; nohup >/dev/null ts-node ./src/index.ts & disown"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5"
  },
  "devDependencies": {
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/mongoose": "^5.11.97",
    "@types/node": "^15.14.1",
    "express": "^4.17.1",
    "mongoose": "^5.13.2",
    "nodemon": "^2.0.10",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5"
  }
}
